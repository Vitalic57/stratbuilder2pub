% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rules_indicators.R
\name{addRule}
\alias{addRule}
\alias{addRule.modelStrategy}
\title{Adds rule or variable to strategy}
\usage{
addRule(this, condition, as, args = list(), type, side, oco = "base",
  osFun = sameMoneyOs, osFun_args = alist(amount = getMoney(this)),
  pathwise = FALSE, money, money_const, betas, betas_const, by_money = TRUE,
  ...)

\method{addRule}{modelStrategy}(this, condition = TRUE, as, args = list(),
  type = "enter", side = 1, oco, osFun = sameMoneyOs,
  osFun_args = alist(amount = getMoney(this)), pathwise = FALSE, money,
  money_const, betas, betas_const, by_money = TRUE, ...)
}
\arguments{
\item{this}{modelStrategy}

\item{condition}{expression, it must use name of indicators and local args}

\item{as}{character, local name of rule}

\item{args}{list, arguments that can be used in condition}

\item{type}{character, type must be enter or exit}

\item{side}{numeric, 1 or -1}

\item{oco}{character, environment of rule}

\item{osFun}{function that calculates how many units of spread should be bought or sold}

\item{osFun_args}{alist of args of osFun function}

\item{pathwise}{logical, if it is FALSE, then calculation of rules and variables will be performed on the tables once per 
computation of coefficients, otherwise calculation of rules and variables will be performed on the scalars on each iteration}

\item{money}{numeric / expression, how much money should be in position after execution of rule. 
Position manager will be added for correcting positions at every step}

\item{money_const}{numeric / expression, the same as money, but without Position manager}

\item{betas}{numeric / expression, number of instruments to buy and sell, position manager will be added}

\item{betas_const}{numeric / expression, the same as betas, but without position manager}

\item{by_money}{logical, if it is TRUE then expression in betas argument will be interpreted as money positions in instruments, else positions will be in pieces}

\item{...}{params}
}
\description{
Conditions will be calculated and then action will be done according to type. osFun arg is needed for definition of 
how much money you want to invest in enter type rules.
}
\examples{
\dontrun{
  addRule(this, as = 'bb_dn_up',
          condition = (Lag(spread,1) < Lag(bb[,'dn'],1)) &
                      (spread > bb[,'dn']) &
                      (spread < bb[,mavg']) &
                      (abs(spread - bb[,'mavg'])/spread  > n) ,
          type = 'enter',
          args = list(n = 0.005),
          side = 1,
          oco = 'long',
          osFun = sameMoneyOs,
          osFun_args = alist(amount = 5000000))
          
  addRule(this, as = 'bb_dn_up1',
          condition = (Lag(spread < bb[,'dn'],1))[iii,] &
                      (spread > bb[,'dn'])[iii,] &
                      (spread < bb[,mavg'])[iii,] &
                      (abs(spread - bb[,'mavg'])/spread  > n)[iii,] ,
          type = 'enter',
          pathwise = TRUE,
          args = list(n = 0.005),
          side = 1,
          oco = 'long',
          osFun = sameMoneyOs,
          osFun_args = alist(amount = 5000000))
}
}
