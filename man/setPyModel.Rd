% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pymodel.R
\name{setPyModel}
\alias{setPyModel}
\alias{setPyModel.modelStrategy}
\title{Set python model}
\usage{
setPyModel(this, pyfile, dockername, lookback_init, lookback_step = 0,
  lookback = 0, data = quote(spread), pathwise = FALSE,
  as = "signal", hostname = "localhost", modelpath = NULL,
  update_with_betas = FALSE, vector_step = FALSE, args = list(),
  port = 4000)

\method{setPyModel}{modelStrategy}(this, pyfile, dockername, lookback_init,
  lookback_step = 0, lookback = 0, data = quote(spread),
  pathwise = FALSE, as = "signal", hostname = "localhost",
  modelpath = NULL, update_with_betas = FALSE, vector_step = FALSE,
  args = list(), port = 4000)
}
\arguments{
\item{this}{modelStrategy}

\item{pyfile}{character, path to .py file}

\item{dockername}{character, name of docker container}

\item{lookback_init}{numeric, periods of time for training the model}

\item{lookback_step}{numeric, periods of time for step of the model}

\item{lookback}{numeric, how many periods need to be to evaluate data expression}

\item{data}{quote, expression that returns numeric vector or matrix}

\item{pathwise}{logical, if TRUE then http requests will be send on each iteration}

\item{as}{character, name of variable that will contains results of model evaluation}

\item{hostname}{character, name of host.}

\item{modelpath}{character, path to pretrained model}

\item{update_with_betas}{logical, by default FALSE. If TRUE then model will be reinit after reinitilization of betas weights}

\item{vector_step}{logical, if TRUE then model.py file should have ability to take vector to step and output vector after predict}

\item{args}{list, list of arguments for python file}

\item{port}{numeric, port for docker container}
}
\description{
User can create realization of python class Model inherited from BaseModel. All dependencies user should specify in Dockerfile,
then with help of addDocker push docker to gitlab.
}
